{
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "paths": {
    "/api/auth/login": {
      "post": {
        "security": [
          {
            "basicAuth": [
              "[]"
            ]
          }
        ],
        "description": "Login accepts some json with the `email` and `password`\nand returns some json that has the token string",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "Login",
        "operationId": "auth",
        "responses": {
          "200": {
            "$ref": "#/responses/loginResponse"
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "description": "Register a new user of the app\nEventually this will verify that only a valid member can sign up.\nCurrently this endpoint doesn't work until we get a database.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "Register a new user",
        "operationId": "registerUserRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Credentials"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/endpointSuccessResponse"
          }
        }
      }
    },
    "/api/bounty": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bounty"
        ],
        "summary": "Retrieves many bounties.",
        "operationId": "bounty",
        "responses": {
          "200": {
            "$ref": "#/responses/bountyResponse"
          }
        }
      },
      "post": {
        "security": [
          {
            "basicAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bounty"
        ],
        "summary": "Retrieves one bounty.",
        "operationId": "bountyGetRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BountyID"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/bountyResponse"
          }
        }
      }
    },
    "/api/bounty/close": {
      "patch": {
        "security": [
          {
            "basicAuth": []
          }
        ],
        "description": "When a bounty is completed, it's no longer available for people to endorse.\nAll closed bounties will have the number of endorsements added to the Space's total score.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bounty"
        ],
        "summary": "Close a bounty",
        "operationId": "bountyCloseRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BountyID"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/endpointSuccessResponse"
          }
        }
      }
    },
    "/api/bounty/endorse": {
      "patch": {
        "security": [
          {
            "basicAuth": []
          }
        ],
        "description": "An endorsement is basically assigning one point value to the bounty.\nA member can only endorse a bounty once.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bounty"
        ],
        "summary": "Endorse a bounty",
        "operationId": "bountyEndorseRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BountyID"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/endpointSuccessResponse"
          }
        }
      }
    },
    "/api/bounty/new": {
      "post": {
        "security": [
          {
            "basicAuth": []
          }
        ],
        "description": "A bounty is a task or action item that one person or a group of people can complete.\nMembers will decide to endorse certain bounties.\nWhen the bounty is closed, the number of endorsements on that bounty gets added to the\ngroups total score.  At certain score intervals, we have a pizza party.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bounty"
        ],
        "summary": "Creates a new bounty",
        "operationId": "bountyNewRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/NewBounty"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/endpointSuccessResponse"
          }
        }
      }
    },
    "/api/info": {
      "get": {
        "description": "Version and commit hash",
        "produces": [
          "application/json"
        ],
        "tags": [
          "info"
        ],
        "summary": "Returns some debug info",
        "operationId": "info",
        "responses": {
          "200": {
            "$ref": "#/responses/infoResponse"
          }
        }
      }
    },
    "/api/score": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ],
        "description": "Score is tallied by adding up the number of endorsements on closed bounties",
        "produces": [
          "application/json"
        ],
        "tags": [
          "score"
        ],
        "summary": "Shows the current score for the space",
        "operationId": "score",
        "responses": {
          "200": {
            "$ref": "#/responses/scoreResponse"
          }
        }
      }
    },
    "/api/user": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ],
        "description": "retrieve user information so that we can easily display it in UIs",
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Shows the current logged in user",
        "operationId": "user",
        "responses": {
          "200": {
            "$ref": "#/responses/userResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "Bounty": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "x-go-name": "Description"
        },
        "endorsements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Member"
          },
          "x-go-name": "Endorsements"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "isOpen": {
          "type": "boolean",
          "x-go-name": "IsOpen"
        },
        "title": {
          "type": "string",
          "x-go-name": "Title"
        }
      },
      "x-go-package": "hackpoints/models"
    },
    "BountyID": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-go-name": "ID"
        }
      },
      "x-go-package": "hackpoints/models"
    },
    "Credentials": {
      "description": "Credentials Create a struct that models the structure of a user, both in the request body, and in the DB",
      "type": "object",
      "required": [
        "password",
        "email"
      ],
      "properties": {
        "email": {
          "description": "Email - the users email",
          "type": "string",
          "x-go-name": "Email",
          "example": "string"
        },
        "password": {
          "description": "Password - the user's password",
          "type": "string",
          "x-go-name": "Password",
          "example": "string"
        }
      },
      "x-go-package": "hackpoints/models"
    },
    "EndpointSuccess": {
      "description": "EndpointSuccess -- success response",
      "type": "object",
      "properties": {
        "ack": {
          "type": "boolean",
          "x-go-name": "Ack"
        }
      },
      "x-go-package": "hackpoints/models"
    },
    "InfoResponse": {
      "description": "InfoResponse -- response of info request",
      "type": "object",
      "properties": {
        "commit": {
          "type": "string",
          "x-go-name": "Commit"
        },
        "message": {
          "description": "Info Message",
          "type": "string",
          "x-go-name": "Message",
          "example": "hello, world!"
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Version"
        }
      },
      "x-go-package": "hackpoints/models"
    },
    "Member": {
      "description": "Member -- a member of the makerspace",
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "x-go-name": "Email"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "hackpoints/models"
    },
    "NewBounty": {
      "description": "NewBounty can't have endorsements by default\nand it is always created Open\nIDs are generated",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "x-go-name": "Description"
        },
        "title": {
          "type": "string",
          "x-go-name": "Title"
        }
      },
      "x-go-package": "hackpoints/models"
    },
    "Score": {
      "type": "object",
      "properties": {
        "score": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Score"
        }
      },
      "x-go-package": "hackpoints/models"
    },
    "TokenResponse": {
      "description": "TokenResponse -- for json response of signin",
      "type": "object",
      "properties": {
        "token": {
          "description": "login response to send token string",
          "type": "string",
          "x-go-name": "Token",
          "example": "\u003cTOKEN_STRING\u003e"
        }
      },
      "x-go-package": "hackpoints/models"
    }
  },
  "responses": {
    "bountyResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Bounty"
      },
      "headers": {
        "Body": {}
      }
    },
    "endpointSuccessResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/EndpointSuccess"
      },
      "headers": {
        "Body": {}
      }
    },
    "infoResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/InfoResponse"
      },
      "headers": {
        "Body": {}
      }
    },
    "loginResponse": {
      "description": "tokenResponseBody for json response of signin",
      "schema": {
        "$ref": "#/definitions/TokenResponse"
      }
    },
    "scoreResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Score"
      },
      "headers": {
        "Body": {}
      }
    },
    "userResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Member"
      },
      "headers": {
        "Body": {}
      }
    }
  },
  "securityDefinitions": {
    "basicAuth": {
      "description": "Enter your basic auth credentials",
      "type": "basic",
      "name": "Authorization",
      "in": "header"
    },
    "bearerAuth": {
      "description": "Enter your bearer token",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}